
    if st.button("‚úÖ Gerar Laudo"):
        document = Document()

        # Se√ß√£o 2 - Material Recebido
        add_paragraph(document, "2 MATERIAL RECEBIDO PARA EXAME", bold=True)

        if uploaded_image:
            try:
                document.add_picture(uploaded_image, width=Inches(5.0))
                add_paragraph(document, "Ilustra√ß√£o 1 ‚Äì Material recebido para exame.", bold=True, align='center', size=10)
            except Exception as e:
                st.error(f"Erro ao processar a imagem: {e}")
                add_paragraph(document, "(Imagem n√£o p√¥de ser carregada)", bold=True, align='center', size=10)
        else:
            add_paragraph(document, "\nIlustra√ß√£o 1 ‚Äì Material recebido para exame.", bold=True)

        subitens_cannabis = {}
        subitens_cocaina = {}

        for i, item_info in enumerate(itens_data):
            qtd = item_info['qtd']
            tipo_mat_code = item_info['tipo_mat_code']
            emb_code = item_info['emb_code']
            cor_emb_code = item_info['cor_emb_code']
            ref = item_info['ref']
            pessoa = item_info['pessoa']

            tipo_material = TIPOS_MATERIAL_BASE[tipo_mat_code]
            embalagem = TIPOS_EMBALAGEM_BASE[emb_code]

            if cor_emb_code:
                embalagem += f" de cor {CORES_FEMININO_EMBALAGEM[cor_emb_code]}"

            texto_item = f"2.{i+1} {qtd} ({obter_quantidade_extenso(qtd)}) {pluralizar_palavra('por√ß√£o', qtd)} de material {tipo_material}, "
            texto_item += f"{'acondicionada em' if qtd == 1 else 'acondicionadas, individualmente, em'} {pluralizar_palavra(embalagem, qtd)}, "
            texto_item += f"referente √† amostra do subitem {ref} do laudo de constata√ß√£o supracitado"
            texto_item += f", relacionada a {pessoa}" if pessoa else ""
            texto_item += "."

            add_paragraph(document, texto_item)

            if tipo_mat_code in ["v", "r"]:
                subitens_cannabis[ref] = f"2.{i+1}"
            elif tipo_mat_code in ["po", "pd"]:
                subitens_cocaina[ref] = f"2.{i+1}"

        # OBJETIVO DOS EXAMES
        add_paragraph(document, "\n3 OBJETIVO DOS EXAMES", bold=True)
        add_paragraph(document, "Visa esclarecer √† autoridade requisitante quanto √†s caracter√≠sticas do material apresentado, bem como se ele cont√©m subst√¢ncia de uso proscrito no Brasil e capaz de causar depend√™ncia f√≠sica e/ou ps√≠quica. O presente laudo pericial busca demonstrar a materialidade da infra√ß√£o penal apurada.", align='justify')

        # EXAMES
        add_paragraph(document, "\n4 EXAMES", bold=True)
        has_cannabis_item = bool(subitens_cannabis)
        has_cocaina_item = bool(subitens_cocaina)

        if has_cannabis_item:
            add_paragraph(document, "4.1 Exames realizados para pesquisa de Cannabis sativa L. (maconha)")
            add_paragraph(document, "4.1.1 Ensaio qu√≠mico com Fast blue salt B: teste de cor em rea√ß√£o com solu√ß√£o aquosa de sal de azul s√≥lido B em meio alcalino;")
            add_paragraph(document, "4.1.2 Cromatografia em Camada Delgada (CCD), comparativa com subst√¢ncia padr√£o, em sistemas contendo eluentes apropriados e posterior revela√ß√£o com solu√ß√£o aquosa de azul s√≥lido B.")
        if has_cocaina_item:
            idx = "4.2" if has_cannabis_item else "4.1"
            add_paragraph(document, f"{idx} Exames realizados para pesquisa de coca√≠na")
            add_paragraph(document, f"{idx}.1 Ensaio qu√≠mico com teste de tiocianato de cobalto-rea√ß√£o de cor com solu√ß√£o de tiocianato de cobalto em meio √°cido;")
            add_paragraph(document, f"{idx}.2 Cromatografia em Camada Delgada (CCD), comparativa com subst√¢ncia padr√£o, em sistemas com eluentes apropriados e revela√ß√£o com solu√ß√£o de iodo platinado.")
        if not has_cannabis_item and not has_cocaina_item:
            add_paragraph(document, "4.1 Exames realizados")
            add_paragraph(document, "4.1.1 Exame macrosc√≥pico;")

        # RESULTADOS
        add_paragraph(document, "\n5 RESULTADOS", bold=True)
        if has_cannabis_item:
            subitens = " e ".join(subitens_cannabis.keys())
            label = "no subitem" if len(subitens_cannabis) == 1 else "nos subitens"
            add_paragraph(document, f"5.1 Resultados obtidos para o(s) material(is) descrito(s) {label} {subitens}:")
            add_paragraph(document, "5.1.1 No ensaio com Fast blue salt B, foram obtidas colora√ß√£o caracter√≠stica para canabinol e tetrahidrocanabinol (princ√≠pios ativos da Cannabis sativa L.).")
            add_paragraph(document, "5.1.2 Na CCD, obtiveram-se perfis cromatogr√°ficos coincidentes com o material de refer√™ncia (padr√£o de Cannabis sativa L.); portanto, a subst√¢ncia tetrahidrocanabinol est√° presente nos materiais questionados.")
        if has_cocaina_item:
            idx = "5.2" if has_cannabis_item else "5.1"
            subitens = " e ".join(subitens_cocaina.keys())
            label = "no subitem" if len(subitens_cocaina) == 1 else "nos subitens"
            add_paragraph(document, f"{idx} Resultados obtidos para o(s) material(is) descrito(s) {label} {subitens}:")
            add_paragraph(document, f"{idx}.1 No teste de tiocianato de cobalto, foram obtidas colora√ß√£o caracter√≠stica para coca√≠na;")
            add_paragraph(document, f"{idx}.2 Na CCD, obteve-se perfis cromatogr√°ficos coincidentes com o material de refer√™ncia (padr√£o de coca√≠na); portanto, a subst√¢ncia coca√≠na est√° presente nos materiais questionados.")

        # CONCLUS√ÉO
        add_paragraph(document, "\n6 CONCLUS√ÉO", bold=True)
        conclusoes = []
        if has_cannabis_item:
            subitens = " e ".join(subitens_cannabis.keys())
            label = "no subitem" if len(subitens_cannabis) == 1 else "nos subitens"
            conclusoes.append(f"no(s) material(is) descrito(s) {label} {subitens}, foi detectada a presen√ßa de partes da planta Cannabis sativa L., vulgarmente conhecida por maconha. A Cannabis sativa L. cont√©m princ√≠pios ativos chamados canabin√≥is, dentre os quais se encontra o tetrahidrocanabinol, subst√¢ncia perturbadora do sistema nervoso central. Tanto a Cannabis sativa L. quanto a tetrahidrocanabinol s√£o proscritas no pa√≠s, com fulcro na Portaria n¬∫ 344/1998, atualizada por meio da RDC n¬∫ 970, de 19/03/2025, da Anvisa.")
        if has_cocaina_item:
            subitens = " e ".join(subitens_cocaina.keys())
            conclusoes.append(f"no(s) material(is) descrito(s) no(s) subitem(ns) {subitens}, foi detectada a presen√ßa de coca√≠na, subst√¢ncia alcaloide estimulante do sistema nervoso central. A coca√≠na √© proscrita no pa√≠s, com fulcro na Portaria n¬∫ 344/1998, atualizada por meio da RDC n¬∫ 970, de 19/03/2025, da Anvisa.")

        if conclusoes:
            texto_final = "A partir das an√°lises realizadas, conclui-se que, " + " Outrossim, ".join(conclusoes)
        else:
            texto_final = "A partir das an√°lises realizadas, conclui-se que n√£o foram detectadas subst√¢ncias de uso proscrito nos materiais analisados."
        add_paragraph(document, texto_final, align='justify')

        # CUST√ìDIA DO MATERIAL
        add_paragraph(document, "\n7 CUST√ìDIA DO MATERIAL", bold=True)
        add_paragraph(document, "7.1 Contraprova")
        add_paragraph(document, f"7.1.1 A amostra contraprova ficar√° armazenada neste Instituto, conforme Portaria 0003/2019/SSP¬† (Lacre n¬∫ {lacre}).")

        # REFER√äNCIAS
        add_paragraph(document, "\nREFER√äNCIAS", bold=True)
        referencias = [
            "BRASIL. Minist√©rio da Sa√∫de. Portaria SVS/MS n¬∞ 344, de 12 de maio de 1998...",
            "GOI√ÅS. Secretaria de Estado da Seguran√ßa P√∫blica. Portaria n¬∫ 0003/2019/SSP...",
            "SWGDRUG: Scientific Working Group for the Analysis of Seized Drugs..."
        ]
        for ref in referencias:
            add_paragraph(document, ref, size=10)

        # Gera√ß√£o do arquivo
        buffer = io.BytesIO()
        document.save(buffer)
        buffer.seek(0)
        st.success("‚úÖ Laudo gerado com sucesso!")
        st.download_button(
            label="üìÑ Baixar Laudo",
            data=buffer,
            file_name=f"Laudo_{numero_laudo}.docx",
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )
